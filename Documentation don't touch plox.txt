Line
- Activates only when in a grid circle/point
- Disappears if grid line does not end in another point
- Draws another line and can change direction when reach the next point
- Starts from middle of grid point, use event.X - bitmap.width / 2

Score for triangle shape(not ngon i know)
- Array of Array of grid circles to store near proximity waypoints
- Using starting circle, find the two nearest points and insert all three into the array
- If player somehow checks through all three, gain three points for 3 sided polygon

Alternatively, each grid circle object can contain two pointer references to two nearest proximity circles.
If player checks through all three, same thing

Menu flow
- splashscreen -> sponsor screen -> main menu -> level selection

two things to check for
- array that stores used patterns, check newest pattern taken path of circles, cannot reuse pattern, refreshes at end of level
- array that checks if current endpoint of line has been taken before, if so(++score), and do not add into array else add into it so we can check if there are any intersection of lines in da future
if they do not find a new grid circle to join with, take away all the endpoints added from array.

How to check for pattern
- we know that there is one node to start the pattern, depending on where it starts, we can rule out that the opposite side nodes are not the pattern nodes
- we know the third node is the one to decide from these choices
top right node
- left, down, example, to do a left, must go through common 2nd node(bottom left), then up by one node
top left node,
Must check whether the fourth node is connected, else, no pattern is formed

How to check for intersection
- Use double for loop, first lines check with all lines, then 2nd, so on and so forth. For repeated numbers like (1, 2) and (2, 1), ignore it to save costs